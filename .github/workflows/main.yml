on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  SITE_NAME: jagekrans-dev-web
  DNS_RESOURCE_GROUP: jagekrans-dev-rg

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Publish site
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: site
  #         path: site

  setup-infra-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    # needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create resource group
        run: >
          az group create
          --name ${{ vars.AZURE_RESOURCE_GROUP }}
          --location ${{ vars.AZURE_LOCATION }}

      - name: Deploy infrastructure
        run: >
          az deployment group create
          --name "jagekrans-dev-web-deployment"
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }}
          --template-file .infra/main.bicep
          --parameters '{ "siteName": { "value": "${{ env.SITE_NAME }}" }}'
          --mode Incremental

      - name: Get API token
        run: |
          token=$(az staticwebapp secrets list --name ${{ env.SITE_NAME }} --query "properties.apiKey" -o tsv)
          echo "::add-mask::$token"
          echo "SWA_TOKEN=$token" >> $GITHUB_ENV

      - name: Deploy static web app
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'site'
          # api_location: 'api'

      - name: Get app URL
        run: |
          url=$(az staticwebapp show --name ${{ env.SITE_NAME }} --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} --query "defaultHostname" -o tsv)
          echo "APP_URL=$url" >> $GITHUB_ENV

      - name: Set active subscription
        run: az account set --subscription ${{ secrets.DNS_SUBSCRIPTION_ID }}

      - name: Set DNS CNAME record
        run: >
          az network dns record-set cname set-record
          --resource-group ${{ env.DNS_RESOURCE_GROUP }}
          --zone-name "jagekrans.dev"
          --record-set-name "mikael"
          --cname ${{ env.APP_URL }}
